?anova
treat <- rep(c("A", "B"), each = 20)
set.seed(1)
treat <- rep(c("A", "B"), each = 20)
group <- rep(1:4, each = 10) # create a 4-block design
measurement <- rep(1:10,4)
groupRan <- rnorm(10, 0, 1)
mean.A <- 8
mean.B <- 6
mean   <- as.numeric(treat == "A") * mean.A
mean[21:40] <- mean.B
sd = 1
RE     <- groupRan[group]
response <- rnorm(n = 40, mean = mean, sd = 1) + RE
example_2 <- data.frame(treat, group, measurement, response)
rm(treat, measurement, group, groupRan, mean.A, mean.B, mean, sd, RE, response)
example_2$group <- as.factor(example_2$group)
library(car)
mod.1a <- lm(response ~ treat, example_2)
mod.1b <- lm(response ~ 1, example_2)
#Anova(mod.1a)
anova(mod.1a, mod.1b)
library(car)
mod.1a <- lm(response ~ treat, example_2)
mod.1b <- lm(response ~ 1, example_2)
#Anova(mod.1a)
anova(mod.1a, mod.1b)
anova(mod.1a)
for (i in levels(subject)){
beta.1 = 10
beta.2 = -6
mean = unique(subset(sub.inter, subject == i)) + beta.1 * subset(x1, subject == i)
mean2 = 500 + 10 * subset(x1, subject == i) + beta.2 * subset(x2, subject == i)
n = 4
sd = 2
y[which(subject == i)] <- rnorm(n = n, mean = mean, sd = sd)
y2[which(subject == i)] <- rnorm(n = n, mean = mean2, sd = sd)
}
install.packages("this.path")
library(this.path)
setwd(this.path::this.dir())
print(getwd())
dirname(current_dir)
dirname(this.path::this.dir())
hyytiala <- read.csv(paste0(dirname(this.path::this.dir()), "/hyytiala.csv"))
hyytiala <- read.csv(paste0("~", dirname(this.path::this.dir()), "/hyytiala.csv"))
hyytiala <- read.csv(paste0(dirname(this.path::this.dir()), "/hyytiala.csv"))
parent_dir <- dirname(this.path::this.dir())
print(parent_dir)
hyytiala <- read.csv(paste0(dirname(this.path::this.dir()), "/data/hyytiala.csv"))
path_to_data <- paste0(dirname(this.path::this.dir()), "/data")
hyytiala <- read.csv(paste0(path_to_data, "/hyytiala.csv"))
setwd(this.path::this.dir())
print(getwd())
path_to_data <- paste0(dirname(this.path::this.dir()), "/data")
load(paste0(path_to_data, "parameterRanges.rdata")) # parameter defaults/ranges
load(paste0(path_to_data, "/parameterRanges.rdata")) # parameter defaults/ranges
source("FitPRELES.R")

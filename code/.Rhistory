#### install/load relevant packages ####
#devtools::install_github('MikkoPeltoniemi/Rpreles')
library(Rpreles)
library(BayesianTools)
hyytiala_nas <- read.csv("~/Projects/physics_guided_nn/data/hyytialaNAS.csv")
hyytiala_nas$date <- as.Date(hyytiala_nas$date)
hyytiala_nas$year <- format(hyytiala_nas$date, format="%Y")
hyytiala <- read.csv("~/Projects/physics_guided_nn/data/hyytiala.csv")
hyytiala$date <- as.Date(hyytiala$date)
hyytiala$year <- format(hyytiala$date, format="%Y")
hyytiala_nas2 <- hyytiala[(hyytiala$year %in% c( "2005", "2004")), ]
hyytiala <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytiala.csv")
hyytiala$date <- as.Date(hyytiala$date)
hyytiala$year <- format(hyytiala$date, format="%Y")
hyytiala_nas2 <- hyytiala[(hyytiala$year %in% c( "2005", "2004")), ]
hyytiala_p <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytialap.csv")
hyytiala_p <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytiala_p.csv")
hyytiala_p <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytialaF.csv")
hyytiala_p <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytialaNAS.csv")
hyytiala <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytiala.csv")
hyytiala$date <- as.Date(hyytiala$date)
hyytiala$year <- format(hyytiala$date, format="%Y")
hyytiala_nas2 <- hyytiala[(hyytiala$year %in% c( "2005", "2004")), ]
attach(hyytiala_nas)
load("~/PycharmProjects/physics_guided_nn/data/parameterRanges.rdata") # parameter defaults/ranges
# par # note that "-999" is supposed to indiate NA!
pars <- par # unfortunate naming "par" replaced by "pars"
rm(par)
pars[pars=="-999"] <- NA
pars # note that some parameters are set without uncertainty (e.g. soildepth)
pars[pars$name=="nu", 4] <- 10 # was 5
load("~/Projects/physics_guided_nn/data/parameterRanges.rdata") # parameter defaults/ranges
load("~/PycharmProjects/physics_guided_nn/data/parameterRanges.rdata")
pars <- par # unfortunate naming "par" replaced by "pars"
rm(par)
pars[pars=="-999"] <- NA
pars # note that some parameters are set without uncertainty (e.g. soildepth)
pars[pars$name=="nu", 4] <- 10 # was 5
library(BayesianTools)
# select the parameters to be calibrated:
pars2tune <- c(5:11, 14:18, 31) # note that we omit 32, as it refers to ET
thispar <- pars$def
names(thispar) <- pars$name
thispar
pars$def
gpp <-  PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=thispar)$GPP #,
et <- PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=thispar)$ET
ell <- function(pars, data=hyytiala_nas){
# pars is a vector the same length as pars2tune
thispar[pars2tune] <- pars
# likelihood function, first shot: normal density
# with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T)) +
#              sum(dnorm(ET, mean=et, sd = thispar[31], log=T))))
with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T))))
}
priors <- createUniformPrior(lower=pars$min[pars2tune], upper=pars$max[pars2tune], best=pars$def[pars2tune])
setup <- createBayesianSetup(likelihood=ell, prior=priors, parallel=T)
settings <- list(iterations=50000, adapt=T, nrChains=3, parallel=T) # runs 3 chains in parallel for each chain ...
hyytiala <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytiala.csv")
hyytiala$date <- as.Date(hyytiala$date)
hyytiala$year <- format(hyytiala$date, format="%Y")
hyytiala_nas <- hyytiala[(hyytiala$year %in% c( "2005", "2004")), ]
# run:
fit <- runMCMC(bayesianSetup = setup, settings = settings, sampler = "DREAMzs")
summary(fit)
pars_fit <- pars
pars_fit$def[pars2tune] <- MAP(fit)$parametersMAP
hyytiala_nas$GPPp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars_fit$def)$GPP
hyytiala_nas$ETp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars_fit$def)$ET
hyytiala_nas$SWp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars_fit$def)$SW
## Very bad fit!
mae <- sum(abs(hyytiala_nas$GPP - hyytiala_nas$GPPp))/length(hyytiala_nas$GPPp)
plot(hyytiala_nas$GPPp)
ell <- function(pars, data=hyytiala_nas){
# pars is a vector the same length as pars2tune
thispar[pars2tune] <- pars
# likelihood function, first shot: normal density
with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T)) +
sum(dnorm(ET, mean=et, sd = thispar[31], log=T))))
#with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T))))
}
attach(hyytiala_nas)
gpp <-  PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=thispar)$GPP #,
et <- PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=thispar)$ET
priors <- createUniformPrior(lower=pars$min[pars2tune], upper=pars$max[pars2tune], best=pars$def[pars2tune])
setup <- createBayesianSetup(likelihood=ell, prior=priors, parallel=T)
settings <- list(iterations=50000, adapt=T, nrChains=3, parallel=T) # runs 3 chains in parallel for each chain ...
# run:
fit <- runMCMC(bayesianSetup = setup, settings = settings, sampler = "DREAMzs")
pars_fit <- pars
pars_fit$def[pars2tune] <- MAP(fit)$parametersMAP
## Add fitted parameter values:
hyytiala_nas$GPPp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars_fit$def)$GPP
hyytiala_nas$ETp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars_fit$def)$ET
hyytiala_nas$SWp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars_fit$def)$SW
## Very bad fit!
mae <- sum(abs(hyytiala_nas$GPP - hyytiala_nas$GPPp))/length(hyytiala_nas$GPPp)
plot(hyytiala_nas$GPPp)
sw <- PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=thispar)$SW
ell <- function(pars, data=hyytiala_nas){
# pars is a vector the same length as pars2tune
thispar[pars2tune] <- pars
# likelihood function, first shot: normal density
with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T)) +
sum(dnorm(ET, mean=et, sd = thispar[31], log=T))) +
sum(dnorm(SW, mean=sw, sd = thispar[31], log=T)))
#with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T))))
}
priors <- createUniformPrior(lower=pars$min[pars2tune], upper=pars$max[pars2tune], best=pars$def[pars2tune])
setup <- createBayesianSetup(likelihood=ell, prior=priors, parallel=T)
settings <- list(iterations=50000, adapt=T, nrChains=3, parallel=T) # runs 3 chains in parallel for each chain ...
# run:
fit <- runMCMC(bayesianSetup = setup, settings = settings, sampler = "DREAMzs")
ell <- function(pars, data=hyytiala_nas){
# pars is a vector the same length as pars2tune
thispar[pars2tune] <- pars
# likelihood function, first shot: normal density
with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T)) +
sum(dnorm(ET, mean=et, sd = thispar[31], log=T))))
#with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T))))
}
hyytiala_nas$GPPp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars$def)$GPP
hyytiala_nas$ETp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars$def)$ET
hyytiala_nas$SWp <- PRELES(PAR=hyytiala_nas$PAR, TAir=hyytiala_nas$Tair, VPD=hyytiala_nas$VPD, Precip=hyytiala_nas$Precip, CO2=hyytiala_nas$CO2, fAPAR=hyytiala_nas$fapar, p=pars$def)$SW
## Much better fit.
mae <- sum(abs(hyytiala_nas$GPP - hyytiala_nas$GPPp))/length(hyytiala_nas$GPPp)
library(Rpreles)
library(BayesianTools)
#load("EddyCovarianceDataBorealSites.rdata") # data for one site: s1-s4
#attach(s1)
hyytiala <- read.csv("~/PycharmProjects/physics_guided_nn/data/hyytiala.csv")
hyytiala$date <- as.Date(hyytiala$date)
hyytiala$year <- format(hyytiala$date, format="%Y")
hyytiala_train <- hyytiala[!(hyytiala$year %in% c("2008", "2007", "2005", "2004")), ]
hyytiala_test <- hyytiala[hyytiala$year == "2008", ]
attach(hyytiala_train)
load("~/Projects/physics_guided_nn/data/parameterRanges.rdata") # parameter defaults/ranges
# par # note that "-999" is supposed to indiate NA!
pars <- par # unfortunate naming "par" replaced by "pars"
rm(par)
pars[pars=="-999"] <- NA
pars # note that some parameters are set without uncertainty (e.g. soildepth)
# jetzt neu: S[max]
#pars[pars$name=="S[max]", 4] <- 45 # was 30
#  S[max]: tick
pars[pars$name=="nu", 4] <- 10 # was 5
pars2tune <- c(5:11, 14:18, 31) # note that we omit 32, as it refers to ET
thispar <- pars$def
names(thispar) <- pars$name
gpp <-  PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=thispar)$GPP #,
et <- PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=thispar)$ET
#qq <- cbind(GPP, ET)
ell <- function(pars, data=hyytiala_train){
# pars is a vector the same length as pars2tune
thispar[pars2tune] <- pars
# likelihood function, first shot: normal density
# with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T)) +
#              sum(dnorm(ET, mean=et, sd = thispar[31], log=T))))
with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T))))
}
priors <- createUniformPrior(lower=pars$min[pars2tune], upper=pars$max[pars2tune], best=pars$def[pars2tune])
setup <- createBayesianSetup(likelihood=ell, prior=priors, parallel=T)
settings <- list(iterations=50000, adapt=T, nrChains=3, parallel=T) # runs 3 chains in parallel for each chain ...
# run:
fit1 <- runMCMC(bayesianSetup = setup, settings = settings, sampler = "DREAMzs")
pars_fit <- pars
pars_fit$def[pars2tune] <- MAP(fit1)$parametersMAP
p_preds <- PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=pars_fit$def)$GPP
sum(abs(GPP - p_preds))/length(p_preds)
ell <- function(pars, data=hyytiala_train){
# pars is a vector the same length as pars2tune
thispar[pars2tune] <- pars
# likelihood function, first shot: normal density
with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T)) +
sum(dnorm(ET, mean=et, sd = thispar[31], log=T))))
#with(data, (sum(dnorm(GPP, mean=gpp, sd = thispar[31], log=T))))
}
priors <- createUniformPrior(lower=pars$min[pars2tune], upper=pars$max[pars2tune], best=pars$def[pars2tune])
setup <- createBayesianSetup(likelihood=ell, prior=priors, parallel=T)
settings <- list(iterations=50000, adapt=T, nrChains=3, parallel=T) # runs 3 chains in parallel for each chain ...
# run:
fit1 <- runMCMC(bayesianSetup = setup, settings = settings, sampler = "DREAMzs")
pars_fit <- pars
pars_fit$def[pars2tune] <- MAP(fit1)$parametersMAP
p_preds <- PRELES(PAR=PAR, TAir=Tair, VPD=VPD, Precip=Precip, CO2=CO2, fAPAR=fapar, p=pars_fit$def)$GPP
sum(abs(GPP - p_preds))/length(p_preds)
#load("EddyCovarianceDataBorealSites.rdata") # data for one site: s1-s4
#attach(s1)
allsites <- read.csv("~/PycharmProjects/physics_guided_nn/data/allsites.csv")
allsites$date <- as.Date(allsites$date)
allsites$year <- format(allsites$date, format="%Y")
print(unique(allsites$year))
allsites$site <- substr(allsites$X, 1, 1)
source("~/PycharmProjects/physics_guided_nn/code/FitPRELES.R")
